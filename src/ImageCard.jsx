import React,{useEffect,useRef}from'react';export default function ImageCard({file,result,index}){const ref=useRef(null);useEffect(()=>{if(ref.current&&result?.overlay){ref.current.innerHTML='';ref.current.appendChild(result.overlay)}},[result]);if(!result)return null;const pct=n=>Math.round(n*100);const flags=[];if(result.donutScore>0.6)flags.push('Anillo/donut');if(result.centerScore>0.6)flags.push('Canal central');if(result.asymmetryScore>0.6)flags.push('Flujo desigual');if(result.hotspotScore>0.6)flags.push('Microjets/spritz');if(result.avgBrightness>0.7)flags.push('Blonding');return(<div className='card'><div className='flex' style={{justifyContent:'space-between'}}><div className='pill'><strong>Imagen {index+1}</strong> <span className='muted small'>{file.name}</span></div><div className='pill'>Riesgo: <span className='score'>{pct(result.channelingRisk)}%</span></div></div><div className='sp'></div><div ref={ref}></div><div className='sp'></div><div className='grid cols-3'><div><span className='tag'>Donut</span><div className='small'>{pct(result.donutScore)}%</div></div><div><span className='tag'>Central</span><div className='small'>{pct(result.centerScore)}%</div></div><div><span className='tag'>Asimetría</span><div className='small'>{pct(result.asymmetryScore)}%</div></div><div><span className='tag'>Hotspots</span><div className='small'>{pct(result.hotspotScore)}%</div></div><div><span className='tag'>Brillo</span><div className='small'>{(result.avgBrightness*100).toFixed(1)}%</div></div><div><span className='tag'>Borde/Centro</span><div className='small'>{result.edgeCenterRatio.toFixed(2)}</div></div></div><div className='small muted'>Etiquetas: {flags.length?flags.join(' · '):'—'}</div></div>)}